#%Module1.0

set compilernames [regexp -all -inline {\S+} [regsub -all {/\S*} "ROLLCOMPILER" ""]]

module-whatis "intelmpi mpi stack"
module-whatis "Version: VERSION"
module-whatis "Compiler: $compilernames"

array set compilerSets {
  gnu   gcc:g++:gfortran:gfortran
  intel icc:icpc:ifort:ifort
  pgi pgcc:pgc++:pgf77:pgf90
}

# Figure out the applicable compiler--either the one whose module was loaded
# when this modulefile was loaded or the one with the most-recently-loaded
# module.  Report an error if neither applies.

# Figure out the applicable compiler--either the one whose module was loaded
# when this modulefile was loaded or the one with the most-recently-loaded
# module.  Report an error if neither applies.
if [ info exists env(I_MPI_CC) ] {
   foreach {compiler} [list ROLLCOMPILER] {
     if {[ string match *$env(I_MPI_CC)* $compilerSets($complier) ]} {
         break;
     }
   }
} elseif [info exists env(LOADEDMODULES)] {
  foreach {module} [split $::env(LOADEDMODULES) :] {
    set module [lindex [split $module /] 0]
    if {[regexp [format {%s(/|\s|$)} $module] $compilernames]} {
      set compiler $module
    }
  }
}

if { ! [info exists compiler] } {
  puts stderr "Need to load a compiler module first"
  exit 1
}


set compilers [split $compilerSets($compiler) :]

set mpiHome /opt/intel/2018.1.163/compilers_and_libraries_2018.1.163/linux/mpi/intel64

setenv MPIHOME $mpiHome
setenv I_MPI_CC  [lindex $compilers 0]
setenv I_MPI_CXX [lindex $compilers 1]
setenv I_MPI_F77 [lindex $compilers 2]
setenv I_MPI_F90 [lindex $compilers 3]
setenv I_MPI_FC  [lindex $compilers 3]

prepend-path PATH $mpiHome/bin
prepend-path LD_LIBRARY_PATH $mpiHome/lib

if { [ string equal $compiler pgi ] } {
    set-alias mpicc $mpiHome/bin/mpipgcc
    set-alias mpicxx $mpiHome/bin/mpipgcxx
    set-alias mpif77 $mpiHome/bin/mpipgf77
    set-alias mpif90 $mpiHome/bin/mpipgf90
} elseif { [ string equal $compiler gnu ] } {
    set-alias mpif90 $mpiHome/bin/mpigf90
}
 
